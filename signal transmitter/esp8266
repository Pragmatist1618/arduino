#include <Arduino.h>
#include <U8x8lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif

U8X8_SSD1306_128X64_NONAME_SW_I2C u8x8(/* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // OLEDs without Reset of the Display

char str[20] = "HELLO!";

int counter = 1;

int button_pin = D8; // GPIO8 (S1)
int preBbuttonStatus = 0;

int outPins[] = {D7, D6, D5, D0};

void setup(void) {
  Serial.begin(9600); // Инициализация последовательного порта
  pinMode(button_pin, INPUT_PULLUP);

  u8x8.begin();
  u8x8.setPowerSave(0);

  for (int i = 0; i < 4; i++) {
    pinMode(outPins[i], OUTPUT);
  }

  delay(2000);
}

void loop(void) {
  // Отправка значения от 1 до 5 на Arduino Nano
  int buttonStatus = digitalRead(button_pin);
  if (buttonStatus && buttonStatus != preBbuttonStatus) {
    counter = counter + 1 % 6;
  }
  preBbuttonStatus = buttonStatus;
  Serial.println(counter);
  sprintf(str, "%d", counter);
  u8x8.setFont(u8x8_font_chroma48medium8_r);
  u8x8.drawString(7, 9, str);
  u8x8.drawString(4, 12, "VEGA-GAZ");
  u8x8.refreshDisplay();    // only required for SSD1606/7
  setMultiplexerOutputs(counter);
  delay(50);
}

void setMultiplexerOutputs(int counter) {
  // Ограничиваем counter значениями от 1 до 16
  counter = constrain(counter, 1, 16);

  // Преобразуем counter в двоичную форму и задаем значения выводам
  for (int i = 0; i < 4; i++) {
    int bitValue = (counter >> i) & 0x01;
    digitalWrite(outPins[i], bitValue);
  }
}
